{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "WordPress is web software you can use to create a beautiful website or blog. This template installs two instances: one running a WordPress deployment and the other, created within a separate stack embedded in this one with template composition, using a local MySQL database to store the data.",

  "Parameters": {

    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String"
    },

    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "m1.small",
      "AllowedValues": [ "m1.tiny", "m1.small", "m1.medium", "m1.large", "m1.xlarge" ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },

    "DBName": {
      "Default": "wordpress",
      "Description": "The WordPress database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBUsername": {
      "Default": "admin",
      "NoEcho": "true",
      "Description": "The WordPress database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "Default": "admin",
      "NoEcho": "true",
      "Description": "The WordPress database admin account password",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },

    "DBRootPassword": {
      "Default": "admin",
      "NoEcho": "true",
      "Description": "Root password for MySQL",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },
    "LinuxDistribution": {
      "Default": "CentOS",
      "Description": "Distribution of choice",
      "Type": "String",
      "AllowedValues": [ "CentOS" ]
    }
  },

  "Mappings": {
    "AWSInstanceType2Arch": {
      "m1.tiny"    : { "Arch": "32" },
      "m1.small"    : { "Arch": "64" },
      "m1.medium"    : { "Arch": "64" },
      "m1.large"   : { "Arch": "64" },
      "m1.xlarge"   : { "Arch": "64" }
    },
    "DistroArch2AMI": {
      "CentOS"     : { "32": "CentOS-7-x86_64-cfntools-boto2.12.0", "64": "CentOS-7-x86_64-cfntools-boto2.12.0" }
    }
  },

  "Resources": {
    "DatabaseServer": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://raw.githubusercontent.com/adesaegher/heat-test/master/MySQL_Single_Instance.template",
        "Parameters": {
          "KeyName"          : { "Ref": "KeyName" },
          "InstanceType"     : { "Ref": "InstanceType" },
          "DBName"           : { "Ref": "DBName" },
          "DBUsername"       : { "Ref": "DBUsername" },
          "DBPassword"       : { "Ref": "DBPassword" },
          "DBRootPassword"   : { "Ref": "DBRootPassword" },
          "LinuxDistribution": { "Ref": "LinuxDistribution" }
        }
      }
    },
    
    "ApacheFrontal": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "WikiServerOne",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "httpd"        : []
              }
            },
            "services": {
              "systemd": {
                "httpd"    : { "enabled": "true", "ensureRunning": "true" }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": { "Fn::FindInMap": [ "DistroArch2AMI", { "Ref": "LinuxDistribution" },
                          { "Fn::FindInMap": [ "AWSInstanceType2Arch", { "Ref": "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref": "InstanceType" },
        "KeyName"        : { "Ref": "KeyName" },
        "UserData"       : { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash -v\n",
          "/opt/aws/bin/cfn-init\n",
          "cat > /etc/apache2/sites-available/wordpress.conf <<EOF\n",
          "ProxyPass /wordpress http://", { "Fn::GetAtt" : [ "lb_vip_floating_ip", "floating_ip_address" ]}, ":8090\n",
          "ProxyPassReverse /wordpress http://", { "Fn::GetAtt" : [ "lb_vip_floating_ip", "floating_ip_address" ]}, ":8090\n",
          "EOF\n",
          "a2enmod proxy\n",
          "a2enmod proxy_http\n",
          "a2ensite wordpress\n",
          "setsebool httpd_can_network_connect=1\n",
          "systemctl restart httpd.service\n"
        ]]}}
      }
    },
    
    "WikiServerOne": {
      "Type": "AWS::EC2::Instance",
      "DependsOn" : "DatabaseServer",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "httpd"        : [],
                "wordpress"    : []
              }
            },
            "services": {
              "systemd": {
                "httpd"    : { "enabled": "true", "ensureRunning": "true" }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": { "Fn::FindInMap": [ "DistroArch2AMI", { "Ref": "LinuxDistribution" },
                          { "Fn::FindInMap": [ "AWSInstanceType2Arch", { "Ref": "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref": "InstanceType" },
        "KeyName"        : { "Ref": "KeyName" },
        "UserData"       : { "Fn::Base64": { "Fn::Join": ["", [
          "#!/bin/bash -v\n",
          "/opt/aws/bin/cfn-init\n",
          "sed -i \"/Deny from All/d\" /etc/httpd/conf.d/wordpress.conf\n",
          "sed -i \"s/Require local/Require all granted/\" /etc/httpd/conf.d/wordpress.conf\n",
          "sed --in-place --e s/database_name_here/", { "Ref": "DBName" },
          "/ --e s/username_here/", { "Ref": "DBUsername" },
          "/ --e s/password_here/", { "Ref": "DBPassword" },
          "/ --e s/localhost/", { "Fn::GetAtt": [ "DatabaseServer", "Outputs.PublicIp" ]},
          "/ /etc/wordpress/wp-config.php\n",
          "setsebool httpd_can_network_connect=1\n",
          "systemctl restart httpd.service\n"
        ]]}}
      }
    },
    "lb_vip_port": {
     "Type": "OS::Neutron::Port",
     "Properties": {
      "network_id": "cda08d59-450e-4486-b318-4ba9a4e6eaf7",
      "name": "lb_vip_port",
      "fixed_ips": [],
      "admin_state_up": "True"
     }
    },
    "lb_vip_floating_ip": {
     "Type": "OS::Neutron::FloatingIP",
     "Properties": {
      "floating_network_id": "8cd08546-dcd7-4c8b-9ca7-b7eb4dedbfcd",
      "port_id": { "Ref": "lb_vip_port" }
     }
     },
    "lb_pool_vip": {
     "Type": "OS::Neutron::FloatingIPAssociation",
     "Properties": {
      "floatingip_id": { "Ref": "lb_vip_floating_ip" },
      "port_id": { "Fn::Select" : [ "port_id", { get_attr: [ LBPool , vip ] } ] }
     }
     },
   "ELB": { 
    "Type": "OS::Neutron::LoadBalancer", 
    "Properties": { 
     "protocol_port": "80", 
     "pool_id": { "Ref": "LBPool" }
    } 
    },
    "ELBmember": {
    "Type": "OS::Neutron::PoolMember",
    "Properties": {
      "pool_id": { "Ref": "LBPool" },
      "address": { "Fn::GetAtt": [ "WikiServerOne", "PublicIp" ]},
      "protocol_port": "80"
    }
    },
   "LBPool": { 
    "Type": "OS::Neutron::Pool", 
    "Properties": { 
     "lb_method": "ROUND_ROBIN", 
     "protocol": "HTTP", 
     "description": "Test Pool", 
     "subnet_id": "77d1f47d-6d1c-4f4f-9e8d-ec3230676964", 
     "vip": { 
       "protocol_port": "8090", 
       "connection_limit": 1000, 
       "description": "Test", 
       "name": "Test" 
     }, 
     "name": "test" 
    }
  }
  },

  "Outputs": {
     "pool_ip_address": {
      "Value": { "Fn::GetAtt" : [ "lb_vip_floating_ip", "floating_ip_address" ]},
      "Description": "The IP address of the load balancing pool"
    },
    "WebsiteURL": {
      "Value": "test",
      "Description": "URL for Wordpress wiki"
    }
  }
}
