{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template WordPress_Single_Instance: WordPress is web software you can use to create a beautiful website or blog. This template installs a single-instance WordPress deployment using a local MySQL database to store the data.",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "m1.tiny", "m1.small", "m1.medium", "m1.large", "m1.xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "DBName": {
      "Default": "wordpress",
      "Description" : "The WordPress database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBUsername": {
      "Default": "admin",
      "NoEcho": "true",
      "Description" : "The WordPress database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "Default": "admin",
      "NoEcho": "true",
      "Description" : "The WordPress database admin account password",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBRootPassword": {
      "Default": "admin",
      "NoEcho": "true",
      "Description" : "Root password for MySQL",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },
    "LinuxDistribution": {
      "Default": "U14",
      "Description" : "Distribution of choice",
      "Type": "String"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "m1.tiny"    : { "Arch" : "32" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"    : { "Arch" : "64" },
      "m1.large"   : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" }
    },
    "DistroArch2AMI": {
      "U10"      : { "32" : "U10-i386-cfntools", "64" : "U10-x86_64-cfntools" },
      "U14"      : { "32" : "U14-i386-cfntools", "64" : "U14-x86_64-cfntools" }
    }
  },

  "Resources" : {
    "DatabaseServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "apt" : {
                "mysql-server" : []
              }
            },
            "services" : {
              "sysvinit" : {
                "mysqld"   : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "DistroArch2AMI", { "Ref" : "LinuxDistribution" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "/opt/aws/bin/cfn-init\n",
          "sed -i \"s/localhost/localhost $(hostname)/1\" /etc/hosts\n",
          "# Setup MySQL root password and create a user\n",
          "mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'\n",
          "cat << EOF | mysql -u root --password='", { "Ref" : "DBRootPassword" }, "'\n",
          "CREATE DATABASE ", { "Ref" : "DBName" }, ";\n",
          "GRANT ALL PRIVILEGES ON ", { "Ref" : "DBName" }, ".* TO \"", { "Ref" : "DBUsername" }, "\"@\"%\"\n",
          "IDENTIFIED BY \"", { "Ref" : "DBPassword" }, "\";\n",
          "FLUSH PRIVILEGES;\n",
          "EXIT\n",
          "EOF\n",
          "IP=`ifconfig eth0 | grep Mask | awk -F ':' '{print $2}' | awk '{print $1}'`\n",
          "sed -i \"s/127.0.0.1/$IP/g\" /etc/mysql/my.cnf\n",
          "service mysql restart\n"
        ]]}}
      }
    },
    "WebServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "apt" : {
                "apache2"        : [],
                "wordpress"        : []
              }
            },
            "services" : {
              "sysvinit" : {
                "apache2"  : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "DistroArch2AMI", { "Ref" : "LinuxDistribution" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "/usr/bin/cfn-init\n",
          "cat > /etc/apache2/sites-enabled/available.conf <<EOF\n",
          "Alias /wordpress /usr/share/wordpress\n",
          "<Directory /usr/share/wordpress>\n",
          "  AllowOverride Options\n",
          "</Directory>\n",
          "EOF\n",
          "a2ensite wordpress\n",
          "sed -i \"s/localhost/localhost $(hostname)/1\" /etc/hosts\n",
	  "cat << EOF > /etc/wordpress/config-`ifconfig eth0 | grep Mask | awk -F ':' '{print $2}' | awk '{print $1}'`.php\n",
	  "<?php\n",
	  "define('DB_NAME', '", { "Ref" : "DBName" }, "');\n",
 	  "define('DB_USER', '", { "Ref" : "DBUsername" }, "');\n",
	  "define('DB_PASSWORD', '", { "Ref" : "DBPassword" }, "');\n",
	  "define('DB_HOST', '", { "Fn::GetAtt" : [ "DatabaseServer", "PublicIp" ]}, "');\n",
	  "define('SECRET_KEY', 'J8ekw3EgbXP0p5fe7xefoa3hWbNhPdDu30RC9Otq8x');\n",
	  "define('WP_CONTENT_DIR', '/srv/www/wp-content/127.0.0.1');\n",
	  "?>\n",
	  "EOF\n",
	  "chown root.www-data /etc/wordpress/config-`ifconfig eth0 | grep Mask | awk -F ':' '{print $2}' | awk '{print $1}'`.php\n",
          "#mv /etc/wordpress/config-127.0.0.1.php /etc/wordpress/config-`ifconfig eth0 | grep Mask | awk -F ':' '{print $2}' | awk '{print $1}'`.php\n",
          "service apache2 restart\n"
        ]]}}
      }
    }
  },

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServer", "PublicIp" ]}, "/wordpress"]] },
      "Description" : "URL for Wordpress wiki"
    }
  }
}
